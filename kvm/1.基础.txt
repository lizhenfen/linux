参考网页：http://www.apelearn.com/bbs/thread-8299-1-1.html
#python-libvirt:http://my.oschina.net/guol/blog/131776
				http://www.ibm.com/developerworks/cn/opensource/os-python-kvm-scripting1/
kvm使用HugePage:  http://www.361way.com/kvm-use-hugepage/4208.html
检测:
    grep -Ei 'vmx|svm' /proc/cpuinfo  #查看cpu是否支持虚拟化
软件安装:
    yum install -y kvm virt-*  libvirt  bridge-utils qemu-img
    kvm: 内核模块,  
        查看是否加载了intel或amd的内核: lsmod kvm | grep intel
        加载: modprobe kvm
    libvirt: 虚拟机管理的命令包
    bridge-utils: 设置网络
    virt-*: 创建,克隆虚拟机以及图形化参数
    qemu-image: qemu参数
    
系统安装：
	virt-install \
	--name  aming1 \
	--ram 512 \
	--disk path=/data/aming1.img,size=30 \
	--vcpus 1 \
	--os-type linux \
	--os-variant rhel6 \
	--network bridge=br0 \
	--graphics none \
	--console pty,target_type=serial \
	--location 'http://mirrors.163.com/centos/6.7/os/i386/' \
	--extra-args 'console=ttyS0,115200n8 serial'


说明：
    -x EXTRA, --extra-args=EXTRA 当执行从"--location"选项指定位置的客户机安装时，附加内核命令行参数到安装程序
    --nographics "virt-install" 将默认使用--vnc选项，使用nographics指定没有控制台被分配给客户机
    --name -n  指定虚拟机的名字
    --ram -r   指定内存分配多少
    --disk path 指定虚拟磁盘放到哪里，size=30 指定磁盘大小为30G,这样磁盘文件格式为raw，
                raw格式不能做快照，后面有说明，需要转换为qcow2格式，如果要使用qcow2格式的虚拟磁盘，
                需要事先创建qcow2格式的虚拟磁盘。 
                参考  http://www.361way.com/kvm-qcow2-preallocation-metadata/3354.html   
                示例:qemu-img create -f qcow2 
                     -o preallocation=metadata  /data/test02.img 7G;  
                     --disk path=/data/test02.img,format=qcow2,size=7,bus=virtio
    --vcpus 指定分配给客户端的vcpu个数
    --accelerate KVM或KQEMU内核加速,这个选项是推荐最好加上。如果KVM和KQEMU都支持，KVM加速器优先使用。
    --cpuset=设置哪个物理CPU能够被虚拟机使用
    --os-type=OS_TYPE 针对一类操作系统优化虚拟机配置（例如：‘linux’，‘windows’）
    --os-variant=OS_VARIANT 针对特定操作系统变体（例如’rhel6’, ’winxp’,'win2k3'）进一步优化虚拟机配置
    --network  指定网络类型
    --graphics 指定安装通过哪种类型，可以是vnc，也可以没有图形，在这里我们没有使用图形直接使用文本方式
    --console 指定控制台类型
    --host-device=HOSTDEV 附加一个物理主机设备到客户机。HOSTDEV是随着libvirt使用的一个节点设备名（具体设备如’virsh nodedev-list’的显示的结果）
    --location 指定安装介质地址，可以是网络地址，也可以是本地的一个绝对路径，
            如果是绝对路径，那么后面还需要指定一个安装介质，比如NFS，假如虚拟机设置ip后
    -u --uuid= 客户端UUID 默认不写时，系统会自动生成
    -s --file-size= 使用磁盘映像的大小 单位为GB
    -f --file= 作为磁盘映像使用的文件

virsh list --all  #显示所有的虚拟机
virsh console kvm_name   #进入虚拟机
virsh shutdown,restart   #关闭(不好用,需要安装acpid服务),重启
virsh destroy kvm_name   #不要acpid服务,直接关闭虚拟机
virsh undefine kvm_name  #取消关联, 若要彻底删除,需要删除文件
virsh suspend kvm_name   #挂起虚拟机
virsh resume  kvm_name   #恢复挂起的虚拟机
virsh autostart kvm_name #主机开机,虚拟机同时开始
virsh autostart --disable kvm_name #禁止开机启动
virsh start kvm_name --console  #开机同时,进入控制台

克隆：
	virt-clone --original kvm_name --name new_name --file /data/image_path 
快照：
	virsh --help | grep snapshot  #查看快照的命令
	qemu-image info /data/image_path  #查看磁盘的类型
	列快照：
		qemu-image info kvm_name  #可以显示快照
		virsh snapshot-list kvm_name #只显示快照
virsh  edit kvm_name  #编辑配置文件, 可以直接使用快照
转换磁盘格式：
	qemu-image convert -f raw -o qcow2 /image_source_path /image_des_path

磁盘扩容：
	qemu-image resize /iamge_path +nG
	生效： virsh destroy kvm_name ; virsh start kvm_name
	扩容：
		pvcreate /dev/vdan
		列出pv:  pvs, vgs
		扩展： vgextend VolGroup /dev/vdan
		lvextend -l +100%FREE /dev/VolGroup/lv_root
		resize2fs /dev/VolGroup/lv_root
增加新硬盘：
	创建：qemu-image create -f qcow2 /data/image_new_path
	关闭：virsh destroy kvm_name
	编辑配置文件： virsh edit kvm_name
动态增加硬盘:
    1. 创建并格式化硬盘
    2. 配置xml文档
    3. 动态增加:  virsh attach-device kvm_name disk.xml
    4. 动态减少:  virsh detach-device kvm_name disk.xml
虚拟磁盘恢复：
	生成配置文件： kvm_name.xml
		virsh dumpxml kvm_name > /etc/libvirt/qemu/new_kvm_name.xml
	定义：	virsh define /etc/libvirt/qemu/new_kvm_name.xml
网卡：
	列出网卡信息：  virsh domiflist kvm_name
	增加网卡信息： virsh attach-interface kvm_name --type bridge --source br0
	重定向配置文件： virsh dumpxml kvm_name > /etc/libvirt/qemu/kvm_name.xml
	重启
动态增加网卡：
	virsh attach-interface guest-naem --type bridge --source br100
	virsh attach-disk guest-naem /path-to-disk  vdd

迁移：
	导出xml配置文件： virsh dumpxml kvm_name > kvm_name.xml 
	查看磁盘位置：    virsh domblklist kvm_name
	同步磁盘：  rsync -avd 